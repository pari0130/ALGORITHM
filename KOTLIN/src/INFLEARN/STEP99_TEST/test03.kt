package INFLEARN.STEP99_TEST
/*
0부터 N-1까지 번호가 매겨진 N개의 블록이 한 줄로 배열되어 있습니다. 개구리 두어 마리가 한 블록에 함께 앉아 있을 때 심하게 다투었습니다. 이제 그들은 그들 사이의 거리를 최대한 넓히기 위해 서로로부터 멀리 뛰기를 원한다. J와 K로 번호가 매겨진 블록 사이의 거리는 K - J + 1로 계산된다. 두 블록이 인접해 있고 두 번째 블록의 높이가 첫 번째 블록과 같거나 더 클 경우에만 한 블록에서 다른 블록으로 이동할 수 있습니다. 만약 그들이 처음에 최적의 출발 블록에 앉기로 선택했다면, 그들이 서로 간에 만들 수 있는 가장 긴 거리는 얼마인가?

함수 쓰기:

재미있는 솔루션(블록: IntArray): 인트

즉, 블럭의 높이를 나타내는 N개의 정수로 구성된 배열 블럭이 주어지면 두 개구리가 블럭 중 하나에서 시작하여 서로 간에 만들 수 있는 가장 긴 거리를 반환합니다.

예:

1. 블록 = [2, 6, 8, 5]가 주어지면 함수는 3을 반환해야 합니다. 블록[0]에서 시작하면 첫 번째 개구리는 제자리에 있고 두 번째 개구리는 블록[2]로 점프할 수 있다.

"예시 2의 그래픽 표현"

2. 블록 = [1, 5, 5, 2, 6]이 주어지면 함수는 4를 반환해야 합니다. 블록[3]에서 시작하면 첫 번째 개구리는 블록[1]으로 점프할 수 있지만 블록[0]은 점프할 수 없으며 두 번째 개구리는 블록[4]으로 점프할 수 있습니다.

"예시 1의 그래픽 표현"

3. 블록 = [1, 1]이 주어지면 함수는 2를 반환해야 합니다. 블록[1]에서 시작하면 첫 번째 개구리는 블록[0]으로 점프할 수 있고 두 번째 개구리는 그 자리에 머무를 수 있습니다. 블록[0]에서 시작하면 동일한 거리가 됩니다.

"예시 3의 그래픽 표현"

다음 가정을 위한 효율적인 알고리즘을 작성하십시오.

N은 [2..] 범위 내의 정수입니다.200,000];
배열 블록의 각 요소는 [1.1,000,000] 범위 내의 정수입니다.
* */
class test03 {
}